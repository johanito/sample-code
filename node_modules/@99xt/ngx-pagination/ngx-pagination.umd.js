(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common'], factory) :
	(factory((global['ngx-pagination'] = {}),global._angular_core,global._angular_common));
}(this, (function (exports,_angular_core,_angular_common) { 'use strict';

var PaginationComponent = (function () {
    function PaginationComponent() {
        this.onSelectPage = new _angular_core.EventEmitter();
    }
    Object.defineProperty(PaginationComponent.prototype, "_total", {
        /**
         * @param {?} total
         * @return {?}
         */
        set: function (total) {
            if (!this.limit) {
                this.limit = 20;
            }
            this.total = total || 0;
            this.initialize();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PaginationComponent.prototype.ngOnInit = function () { };
    /**
     * @return {?}
     */
    PaginationComponent.prototype.initialize = function () {
        this.loading = true;
        this.show = false;
        this.totalPages = [];
        if (this.total && this.total > 0) {
            this.pageCount = Math.ceil(this.total / this.limit);
            if (this.limit > this.total) {
                this.pageCount = 1;
            }
            for (var /** @type {?} */ i = 1; i < this.pageCount + 1; i++) {
                this.totalPages.push(i);
            }
            this.last = this.totalPages[this.totalPages.length - 1];
            this.current = (this.current) ? this.current : 1;
            this.next = (this.current === this.last) ? 0 : this.current + 1;
            this.generatePagination();
            this.show = true;
            this.loading = false;
        }
    };
    /**
     * @return {?}
     */
    PaginationComponent.prototype.generatePagination = function () {
        var /** @type {?} */ pageCount = this.pageCount;
        var /** @type {?} */ pages = this.totalPages;
        var /** @type {?} */ current = this.current;
        this.pagination = {
            first: [],
            second: [],
            third: []
        };
        if ((current !== 0) && (current < (pageCount + 1))) {
            if (pageCount < 6) {
                this.pagination.first = pages;
                this.pagination.second = [];
                this.pagination.third = [];
            }
            if (pageCount === 6) {
                if ((pageCount - current) < 2) {
                    this.pagination.first = pages.slice(0, 1); // first
                    this.pagination.second = pages.slice((pages.length - 3), pages.length); // last4
                    this.pagination.third = [];
                }
                else {
                    if (current < 3) {
                        this.pagination.first = pages.slice(0, 3); // first3
                        this.pagination.second = pages.slice((pages.length - 1), pages.length); // last
                        this.pagination.third = [];
                    }
                    if (current === 3) {
                        this.pagination.first = pages.slice(0, 4); // first4
                        this.pagination.second = pages.slice((pages.length - 1), pages.length); // last
                        this.pagination.third = [];
                    }
                    if (current > 3) {
                        this.pagination.first = pages.slice(0, 1); // first
                        this.pagination.second = pages.slice((pages.length - 4), pages.length); // last4
                        this.pagination.third = [];
                    }
                }
            }
            if (pageCount > 6) {
                if (pageCount - current < 2) {
                    this.pagination.first = pages.slice(0, 1); // first
                    this.pagination.second = pages.slice((pages.length - 3), pages.length); // last4
                    this.pagination.third = [];
                }
                else if (pageCount - current === 2) {
                    this.pagination.first = pages.slice(0, 1); // first
                    this.pagination.second = pages.slice((pages.length - 4), pages.length); // last4
                    this.pagination.third = [];
                }
                else {
                    if (current < 3) {
                        this.pagination.first = pages.slice(0, 3); // first3
                        this.pagination.second = pages.slice((pages.length - 1), pages.length); // last
                        this.pagination.third = [];
                    }
                    if (current === 3) {
                        this.pagination.first = pages.slice(0, 4); // first4
                        this.pagination.second = pages.slice((pages.length - 1), pages.length); // last
                        this.pagination.third = [];
                    }
                    if (current > 3) {
                        this.pagination.first = pages.slice(0, 1); // first
                        this.pagination.second = pages.slice((current - 2), (current + 1)); // i-1, i, i+1
                        this.pagination.third = pages.slice((pages.length - 1), pages.length); // last
                    }
                }
            }
        }
    };
    /**
     * @param {?} page
     * @return {?}
     */
    PaginationComponent.prototype.selectPage = function (page) {
        this.current = page;
        if (page === this.last) {
            this.next = 0;
        }
        else {
            this.next = this.current + 1;
        }
        this.generatePagination();
        this.onSelectPage.emit(page);
    };
    /**
     * @return {?}
     */
    PaginationComponent.prototype.goPrev = function () {
        if (this.current > 0) {
            this.selectPage(this.current - 1);
        }
    };
    /**
     * @return {?}
     */
    PaginationComponent.prototype.goNext = function () {
        this.selectPage(this.current + 1);
    };
    return PaginationComponent;
}());
PaginationComponent.decorators = [
    { type: _angular_core.Component, args: [{
                selector: 'pagination',
                template: "<div *ngIf=\"show\"> <div> <div *ngIf=\"loading\">Loading...</div> <div *ngIf=\"!loading\"> <nav> <ul class=\"pagination\"> <li *ngIf=\"current>1\" (click)=\"goPrev()\" class=\"prev\" > <a>Prev</a> </li> <li *ngFor=\"let n of pagination.first\" (click)=\"selectPage(n)\" [ngClass]=\"{'active': current==n}\" > <a>{{ n }}</a> </li> <li *ngIf=\"pagination.second.length>0\" class=\"empty\" > <a>...</a> </li> <li *ngFor=\"let n of pagination.second\" (click)=\"selectPage(n)\" [ngClass]=\"{'active': current==n}\" > <a>{{ n }}</a> </li> <li *ngIf=\"pagination.third.length>0\" class=\"empty\" > <a>...</a> </li> <li *ngFor=\"let n of pagination.third\" (click)=\"selectPage(n)\" [ngClass]=\"{'active': current==n}\" > <span>{{ n }}</span> </li> <li *ngIf=\"next!=0\" (click)=\"goNext()\" class=\"next\" > <span>Next</span> </li> </ul> </nav> </div> </div> </div> ",
                styles: ["ul.pagination { padding: 0; margin: 0; list-style: none; } ul.pagination li { margin: 0 3px; padding: 5px 10px; display: inline-block; border: 1px solid #ccc; cursor: pointer; } ul.pagination li.empty { border: none; cursor: default; } ul.pagination li.next { border: none; } ul.pagination li.prev { border: none; } ul.pagination li.active { background: #ccc; }"]
            },] },
];
/**
 * @nocollapse
 */
PaginationComponent.ctorParameters = function () { return []; };
PaginationComponent.propDecorators = {
    'limit': [{ type: _angular_core.Input },],
    '_total': [{ type: _angular_core.Input, args: ['total',] },],
    'onSelectPage': [{ type: _angular_core.Output },],
};

var PaginationModule = (function () {
    function PaginationModule() {
    }
    /**
     * @return {?}
     */
    PaginationModule.forRoot = function () {
        return {
            ngModule: PaginationModule,
            providers: []
        };
    };
    return PaginationModule;
}());
PaginationModule.decorators = [
    { type: _angular_core.NgModule, args: [{
                imports: [
                    _angular_common.CommonModule
                ],
                declarations: [
                    PaginationComponent
                ],
                exports: [
                    PaginationComponent
                ]
            },] },
];
/**
 * @nocollapse
 */
PaginationModule.ctorParameters = function () { return []; };

exports.PaginationModule = PaginationModule;
exports.PaginationComponent = PaginationComponent;

Object.defineProperty(exports, '__esModule', { value: true });

})));
